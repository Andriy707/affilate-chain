// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lead {
  leadId    String   @id @default(uuid()) @map("lead_id")
  ipAddress String   @map("ip_address")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  actions Action[]

  @@map("leads")
}

model Action {
  actionId     String   @id @default(uuid()) @map("action_id")
  leadId       String   @map("lead_id")
  actionType   String   @map("action_type") // PATH_DECLINE, PATH_SUBMIT, PATH_VIEW
  sessionId    String?  @map("session_id")
  offerId      String?  @map("offer_id")
  offerPosition Int?    @map("offer_position")
  metadata     Json?    @map("metadata")
  createdAt    DateTime @default(now()) @map("created_at")

  // Relations
  lead  Lead   @relation(fields: [leadId], references: [leadId], onDelete: Cascade)
  offer Offer? @relation(fields: [offerId], references: [offerId])

  @@map("actions")
}

model Offer {
  offerId      String   @id @default(uuid()) @map("offer_id")
  title        String
  description  String
  savingsText  String   @map("savings_text")
  affiliateUrl String   @map("affiliate_url")
  position     Int      @default(1) // For ordering offers
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  actions Action[]

  @@map("offers")
  @@index([position])
  @@index([isActive])
}